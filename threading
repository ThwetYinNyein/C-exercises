#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>

#define N 10

// Function to sum the first n integers
void* sumNints(void* arg) {
    for (int i = 1; i <= N; i++) {
        printf("Thread %ld: Sum of first %d integers is %d\n", pthread_self(), i, (i * (i + 1)) / 2);
        sleep(rand() % 2 + 1); // Sleep for 1-2 seconds
    }
    return NULL;
}

// Function to calculate factorial
void* factorial(void* arg) {
    long factorial = 1;
    for (int i = 1; i <= N; i++) {
        factorial *= i;
        printf("Thread %ld: Factorial of %d is %ld\n", pthread_self(), i, factorial);
        sleep(rand() % 2 + 1); // Sleep for 1-2 seconds
    }
    return NULL;
}

int main() {
    pthread_t thread1, thread2;

    // Create the first thread for summing integers
    if (pthread_create(&thread1, NULL, sumNints, NULL) != 0) {
        perror("Failed to create thread 1");
        return 1;
    }

    // Create the second thread for calculating factorials
    if (pthread_create(&thread2, NULL, factorial, NULL) != 0) {
        perror("Failed to create thread 2");
        return 1;
    }

    // Wait for both threads to finish
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);

    printf("Both threads have finished execution.\n");
    return 0;
}
